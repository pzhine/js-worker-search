{"version":3,"sources":["webpack:///webpack/bootstrap b7cb2d938eb36c4d6ba1","webpack:///./src/worker/Worker.js","webpack:///./src/util/index.js","webpack:///./src/util/SearchUtility.js","webpack:///./src/util/constants.js","webpack:///./src/util/SearchIndex.js"],"names":["searchUtility","self","addEventListener","data","event","method","uid","text","indexDocument","callbackId","query","results","search","postMessage","indexMode","setIndexMode","INDEX_MODES","SearchUtility","ALL_SUBSTRINGS","tokenizePattern","caseSensitive","_indexMode","_tokenizePattern","_caseSensitive","searchIndex","uids","RegExp","fieldTokens","_tokenize","_sanitize","forEach","expandedTokens","_expandToken","fieldToken","expandedToken","Object","keys","tokens","length","Error","pattern","token","EXACT_WORDS","PREFIXES","_expandPrefixTokens","_expandAllSubstringTokens","i","substring","j","charAt","push","error","console","substr","string","trim","toLocaleLowerCase","split","filter","SearchIndex","tokenToUidMap","uidMap","initialized","currentUidMap"],"mappings":"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","file":"b7cb2d938eb36c4d6ba1.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b7cb2d938eb36c4d6ba1","import SearchUtility from \"../util\";\n\n/**\n * Search entry point to web worker.\n * Builds search index and performs searches on separate thread from the ui.\n */\n\nconst searchUtility = new SearchUtility();\n\nself.addEventListener(\n  \"message\",\n  event => {\n    const { data } = event;\n    const { method } = data;\n\n    switch (method) {\n      case \"indexDocument\":\n        const { uid, text } = data;\n\n        searchUtility.indexDocument(uid, text);\n        break;\n      case \"search\":\n        const { callbackId, query } = data;\n\n        const results = searchUtility.search(query);\n\n        self.postMessage({ callbackId, results });\n        break;\n      case \"setIndexMode\":\n        const { indexMode } = data;\n\n        searchUtility.setIndexMode(indexMode);\n        break;\n    }\n  },\n  false\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/worker/Worker.js","import SearchUtility from \"./SearchUtility\";\nimport { INDEX_MODES } from \"./constants\";\n\nexport { INDEX_MODES, SearchUtility };\nexport default SearchUtility;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/index.js","import { INDEX_MODES } from \"./constants\";\nimport SearchIndex from \"./SearchIndex\";\n\n/**\n * Synchronous client-side full-text search utility.\n * Forked from JS search (github.com/bvaughn/js-search).\n */\nexport default class SearchUtility {\n  /**\n   * Constructor.\n   *\n   * @param indexMode See #setIndexMode\n   * @param tokenizePattern See #setTokenizePattern\n   * @param caseSensitive See #setCaseSensitive\n   */\n  constructor(\n    {\n      indexMode = INDEX_MODES.ALL_SUBSTRINGS,\n      tokenizePattern = /\\s+/,\n      caseSensitive = false\n    } = {}\n  ) {\n    this._indexMode = indexMode;\n    this._tokenizePattern = tokenizePattern;\n    this._caseSensitive = caseSensitive;\n\n    this.searchIndex = new SearchIndex();\n    this.uids = {};\n  }\n\n  /**\n   * Returns a constant representing the current index mode.\n   */\n  getIndexMode(): string {\n    return this._indexMode;\n  }\n\n  /**\n   * Returns a constant representing the current tokenize pattern.\n   */\n  getTokenizePattern(): RegExp {\n    return this._tokenizePattern;\n  }\n\n  /**\n   * Returns a constant representing the current case-sensitive bit.\n   */\n  getCaseSensitive(): boolean {\n    return this._caseSensitive;\n  }\n\n  /**\n   * Adds or updates a uid in the search index and associates it with the specified text.\n   * Note that at this time uids can only be added or updated in the index, not removed.\n   *\n   * @param uid Uniquely identifies a searchable object\n   * @param text Text to associate with uid\n   */\n  indexDocument(uid: any, text: string): SearchUtility {\n    this.uids[uid] = true;\n\n    var fieldTokens: Array<string> = this._tokenize(this._sanitize(text));\n\n    fieldTokens.forEach(fieldToken => {\n      var expandedTokens: Array<string> = this._expandToken(fieldToken);\n\n      expandedTokens.forEach(expandedToken => {\n        this.searchIndex.indexDocument(expandedToken, uid);\n      });\n    });\n\n    return this;\n  }\n\n  /**\n   * Searches the current index for the specified query text.\n   * Only uids matching all of the words within the text will be accepted.\n   * If an empty query string is provided all indexed uids will be returned.\n   *\n   * Document searches are case-insensitive (e.g. \"search\" will match \"Search\").\n   * Document searches use substring matching (e.g. \"na\" and \"me\" will both match \"name\").\n   *\n   * @param query Searchable query text\n   * @return Array of uids\n   */\n  search(query: string): Array<any> {\n    if (!query) {\n      return Object.keys(this.uids);\n    } else {\n      var tokens: Array<string> = this._tokenize(this._sanitize(query));\n\n      return this.searchIndex.search(tokens);\n    }\n  }\n\n  /**\n   * Sets a new index mode.\n   * See util/constants/INDEX_MODES\n   */\n  setIndexMode(indexMode: string): void {\n    if (Object.keys(this.uids).length > 0) {\n      throw Error(\n        \"indexMode cannot be changed once documents have been indexed\"\n      );\n    }\n\n    this._indexMode = indexMode;\n  }\n\n  /**\n   * Sets a new tokenize pattern (regular expression)\n   */\n  setTokenizePattern(pattern: RegExp): void {\n    this._tokenizePattern = pattern;\n  }\n\n  /**\n   * Sets a new case-sensitive bit\n   */\n  setCaseSensitive(caseSensitive: boolean): void {\n    this._caseSensitive = caseSensitive;\n  }\n\n  /**\n   * Index strategy based on 'all-substrings-index-strategy.ts' in github.com/bvaughn/js-search/\n   *\n   * @private\n   */\n  _expandToken(token: string): Array<string> {\n    switch (this._indexMode) {\n      case INDEX_MODES.EXACT_WORDS:\n        return [token];\n      case INDEX_MODES.PREFIXES:\n        return this._expandPrefixTokens(token);\n      case INDEX_MODES.ALL_SUBSTRINGS:\n      default:\n        return this._expandAllSubstringTokens(token);\n    }\n  }\n\n  _expandAllSubstringTokens(token: string): Array<string> {\n    const expandedTokens = [];\n\n    // String.prototype.charAt() may return surrogate halves instead of whole characters.\n    // When this happens in the context of a web-worker it can cause Chrome to crash.\n    // Catching the error is a simple solution for now; in the future I may try to better support non-BMP characters.\n    // Resources:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt\n    // https://mathiasbynens.be/notes/javascript-unicode\n    try {\n      for (let i = 0, length = token.length; i < length; ++i) {\n        let substring: string = \"\";\n\n        for (let j = i; j < length; ++j) {\n          substring += token.charAt(j);\n          expandedTokens.push(substring);\n        }\n      }\n    } catch (error) {\n      console.error(`Unable to parse token \"${token}\" ${error}`);\n    }\n\n    return expandedTokens;\n  }\n\n  _expandPrefixTokens(token: string): Array<string> {\n    const expandedTokens = [];\n\n    // String.prototype.charAt() may return surrogate halves instead of whole characters.\n    // When this happens in the context of a web-worker it can cause Chrome to crash.\n    // Catching the error is a simple solution for now; in the future I may try to better support non-BMP characters.\n    // Resources:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt\n    // https://mathiasbynens.be/notes/javascript-unicode\n    try {\n      for (let i = 0, length = token.length; i < length; ++i) {\n        expandedTokens.push(token.substr(0, i + 1));\n      }\n    } catch (error) {\n      console.error(`Unable to parse token \"${token}\" ${error}`);\n    }\n\n    return expandedTokens;\n  }\n\n  /**\n   * @private\n   */\n  _sanitize(string: string): string {\n    return this._caseSensitive\n      ? string.trim()\n      : string.trim().toLocaleLowerCase();\n  }\n\n  /**\n   * @private\n   */\n  _tokenize(text: string): Array<string> {\n    return text.split(this._tokenizePattern).filter(text => text); // Remove empty tokens\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/SearchUtility.js","export const INDEX_MODES = {\n  // Indexes for all substring searches (e.g. the term \"cat\" is indexed as \"c\", \"ca\", \"cat\", \"a\", \"at\", and \"t\").\n  // Based on 'all-substrings-index-strategy' from js-search;\n  // github.com/bvaughn/js-search/blob/master/source/index-strategy/all-substrings-index-strategy.ts\n  ALL_SUBSTRINGS: \"ALL_SUBSTRINGS\",\n\n  // Indexes for exact word matches only.\n  // Based on 'exact-word-index-strategy' from js-search;\n  // github.com/bvaughn/js-search/blob/master/source/index-strategy/exact-word-index-strategy.ts\n  EXACT_WORDS: \"EXACT_WORDS\",\n\n  // Indexes for prefix searches (e.g. the term \"cat\" is indexed as \"c\", \"ca\", and \"cat\" allowing prefix search lookups).\n  // Based on 'prefix-index-strategy' from js-search;\n  // github.com/bvaughn/js-search/blob/master/source/index-strategy/prefix-index-strategy.ts\n  PREFIXES: \"PREFIXES\"\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constants.js","/**\n * Maps search tokens to uids.\n * This structure is used by the Search class to optimize search operations.\n * Forked from JS search (github.com/bvaughn/js-search).\n */\nexport default class SearchIndex {\n  tokenToUidMap: { [token: string]: any };\n\n  constructor() {\n    this.tokenToUidMap = {};\n  }\n\n  /**\n   * Maps the specified token to a uid.\n   *\n   * @param token Searchable token (e.g. \"road\")\n   * @param uid Identifies a document within the searchable corpus\n   */\n  indexDocument(token: string, uid: any): void {\n    if (!this.tokenToUidMap[token]) {\n      this.tokenToUidMap[token] = {};\n    }\n\n    this.tokenToUidMap[token][uid] = uid;\n  }\n\n  /**\n   * Finds uids that have been mapped to the set of tokens specified.\n   * Only uids that have been mapped to all tokens will be returned.\n   *\n   * @param tokens Array of searchable tokens (e.g. [\"long\", \"road\"])\n   * @return Array of uids that have been associated with the set of search tokens\n   */\n  search(tokens: Array<string>): Array<any> {\n    let uidMap: { [uid: any]: any } = {};\n    let initialized = false;\n\n    tokens.forEach(token => {\n      let currentUidMap: { [uid: any]: any } = this.tokenToUidMap[token] || {};\n\n      if (!initialized) {\n        initialized = true;\n\n        for (let uid in currentUidMap) {\n          uidMap[uid] = currentUidMap[uid];\n        }\n      } else {\n        for (let uid in uidMap) {\n          if (!currentUidMap[uid]) {\n            delete uidMap[uid];\n          }\n        }\n      }\n    });\n\n    let uids: Array<any> = [];\n\n    for (let uid in uidMap) {\n      uids.push(uidMap[uid]);\n    }\n\n    return uids;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/SearchIndex.js"],"sourceRoot":""}